ex.traits1[, 1]<-rnorm(1000,  rlnorm(1000, 0, 1),
rlnorm(1000, 0, 1))
#traits b: uniform distribution
ex.traits1[, 2]<-runif(1000)
ex.sp1<-c()
ex.com1<-matrix(0, nrow=10, ncol=20)
for(c in 1: 10){
ex.com.interm <- table(sample(sp, size=100,
prob=rlnorm(20, 0, sdlog), replace=T))
ex.com1[c, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp1 <- c(ex.sp1, rep(sp, times=ex.com1[c,]))
}
ex.indplot1 <- as.factor(rep(com, 100))
#Stock the results
res.simu1[[n]] <- Tstats(ex.traits1, ex.indplot1, ex.sp1,
printprogress = FALSE)
res.simu1.pval[[n]]<-sum_Tstats(res.simu1[[n]], type="p.value")
print(n)
}#end of simulation
#exemple of result for one typical randomisation
#Test of the plotDistri function
plotDistri(ex.traits1,  rep("toutes_sp", times = dim(ex.traits1)[1]),
ex.indplot1, plot.ask= F)
plotDistri(ex.traits1,  rep("region", times = dim(ex.traits1)[1]),
ex.sp1, plot.ask= F)
par(mfrow=c(1,1))
plot(res.simu1[[1]])
#traits a: Normal  distribution
par(mfrow=c(3, 2))
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[1:20, 1])))
plot(xx, type="l", main="T_IP.IC norm")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[21:40, 1])))
plot(xx, type="l", main="T_IC.IR norm")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[41:60, 1])))
plot(xx, type="l", main="T_PC.PR norm")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
#traits b: Uniform  distribution
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[1:20, 2])))
plot(xx, type="l", main="T_IP.IC Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[21:40, 2])))
plot(xx, type="l", main="T_IC.IR Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[41:60, 2])))
plot(xx, type="l", main="T_PC.PR Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
par(mfrow=c(1,1))
meanSES.1.T_IP.IC.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses[,1], na.rm=T))
meanSES.1.T_IC.IR.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,1], na.rm=T))
meanSES.1.T_PC.PR.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,1], na.rm=T))
meanSES.1.T_IP.IC.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses[,2], na.rm=T))
meanSES.1.T_IC.IR.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,2], na.rm=T))
meanSES.1.T_PC.PR.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,2], na.rm=T))
par(mfrow=c(3,2))
####         T_IP.IC
#T_IP.IC.distriNorm
xx<-sort(unlist(meanSES.1.T_IP.IC.distriNorm))
plot(xx, type="l", main="T_IP.IC norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_IP.IC.distriUni
xx<-sort(unlist(meanSES.1.T_IP.IC.distriUni))
plot(xx, type="l", main="T_IP.IC uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
####         T_IC.IR
#T_IC.IR.distriNorm
xx<-sort(unlist(meanSES.1.T_IC.IR.distriNorm))
plot(xx, type="l", main="T_IP.IC norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_IC.IR.distriUni
xx<-sort(unlist(meanSES.1.T_IC.IR.distriUni))
plot(xx, type="l", main="T_IP.IC uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
####         T_PC.PR
#T_PC.PR.distriNorm
xx<-sort(unlist(meanSES.1.T_PC.PR.distriNorm))
plot(xx, type="l", main="T_PC.PR norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_PC.PR.distriUni
xx<-sort(unlist(meanSES.1.T_PC.PR.distriUni))
plot(xx, type="l", main="T_PC.PR uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[1:20, 2])))
plot(xx, type="l", main="T_IP.IC Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[21:40, 2])))
plot(xx, type="l", main="T_IC.IR Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
xx <- sort(unlist(lapply(res.simu1.pval, function(x) x[41:60, 2])))
plot(xx, type="l", main="T_PC.PR Uni")
abline(h = 0.025)
nbre_alpha_error <- round((sum(xx < 0.025) +1 ) / (length(xx)+1), 5)
text(50, 0.8, labels = paste("alpha error", nbre_alpha_error, sep = "="),
cex = 0.5, pos = 4)
par(mfrow=c(1,1))
meanSES.1.T_IP.IC.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses[,1], na.rm=T))
meanSES.1.T_IC.IR.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,1], na.rm=T))
meanSES.1.T_PC.PR.distriNorm <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,1], na.rm=T))
meanSES.1.T_IP.IC.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses[,2], na.rm=T))
meanSES.1.T_IC.IR.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,2], na.rm=T))
meanSES.1.T_PC.PR.distriUni <- lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,2], na.rm=T))
par(mfrow=c(3,2))
####         T_IP.IC
#T_IP.IC.distriNorm
xx<-sort(unlist(meanSES.1.T_IP.IC.distriNorm))
plot(xx, type="l", main="T_IP.IC norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_IP.IC.distriUni
xx<-sort(unlist(meanSES.1.T_IP.IC.distriUni))
plot(xx, type="l", main="T_IP.IC uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
####         T_IC.IR
#T_IC.IR.distriNorm
xx<-sort(unlist(meanSES.1.T_IC.IR.distriNorm))
plot(xx, type="l", main="T_IP.IC norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_IC.IR.distriUni
xx<-sort(unlist(meanSES.1.T_IC.IR.distriUni))
plot(xx, type="l", main="T_IP.IC uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
####         T_PC.PR
#T_PC.PR.distriNorm
xx<-sort(unlist(meanSES.1.T_PC.PR.distriNorm))
plot(xx, type="l", main="T_PC.PR norm", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf[,1], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.sup[,1], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
#T_PC.PR.distriUni
xx<-sort(unlist(meanSES.1.T_PC.PR.distriUni))
plot(xx, type="l", main="T_PC.PR uni", ylim=c(-3,3))
xx_lim.inf<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf[,2], na.rm=T)))
xx_lim.sup<-unlist(lapply(res.simu1, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.sup[,2], na.rm=T)))
abline(h = mean(xx_lim.inf))
abline(h = mean(xx_lim.sup))
nbre_alpha_error<-(sum(xx<xx_lim.inf | xx>xx_lim.sup)+1)/(length(xx)+1)
text(3, 0.8, labels=paste("alpha error",round(nbre_alpha_error, 5), sep="="), cex=0.5, pos=4
)
meanSES.1.T_IP.IC.distriUni
# Don't forget to change if you change the value in the next chunk an you want the correct values in the text
nperm <- length(nb_param_val * N_repet_Param)
max.value_traits <- 250
param_DIST_between_MEAN.init <-round(sort(seq(10, 200,
length.out = nb_param_val)), 2)
param_DIST_between_MEAN <- rep(param_DIST_between_MEAN.init, N_repet_Param)
mean_sd.param <- rep(10, nperm)
# Parameter for the variance in species mean trait values
param_SD <- seq(10, 100,length.out = nb_param_val)
sd_mean.param <- sample (rep(param_SD, N_repet_Param),
size = length(rep(param_SD, N_repet_Param)),
replace=F)
sd_sd.param <- rep(10, nperm)
# Number of values for each parameters
# param_DIST_between_MEAN.init and param_SD
nb_param_val
#Number of permutations is the product of the number
#of values for each parameter (nb_param_val) and the
#number of permutations by parameter (N_repet_Param)
nperm <- length(nb_param_val * N_repet_Param)
# Maximum mean value for a trait
max.value_traits <- 250
# Parameter for the distance between species mean trait values
param_DIST_between_MEAN.init <-round(sort(seq(10, 200,
length.out = nb_param_val)), 2)
param_DIST_between_MEAN <- rep(param_DIST_between_MEAN.init, N_repet_Param)
mean_sd.param <- rep(10, nperm)
# Parameter for the variance in species mean trait values
param_SD <- seq(10, 100,length.out = nb_param_val)
sd_mean.param <- sample (rep(param_SD, N_repet_Param),
size = length(rep(param_SD, N_repet_Param)),
replace=F)
sd_sd.param <- rep(10, nperm)
#Start simulation
nperm <- N_repet_Param*length(param_SD)
mean.sp_stock2 <- list()
sd.sp_stock2 <- list()
res.simu2 <- list()
res.simu2.pval <- list()
res.simu.traits2 <- list()
for(n in 1:nperm){#for each permutation
# Draw communities using lognormal distribution of abondances
# 100 individuals by populations
ex.sp2 <- c()
ex.com2 <- matrix(0, nrow=10, ncol=20)
for(i in 1: 10){
ex.com.interm <- table(sample(sp, size = 100,
prob=rlnorm(20, 0, sdlog),
replace=T))
ex.com2[i, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp2 <- c(ex.sp2, rep(sp, times=ex.com2[i,]))
}
ex.indplot2 <- as.factor(rep(com, 100))
# Defining traits mean and sd by species
mean_mean.param.interm <- seq(max.value_traits - param_DIST_between_MEAN[n],
max.value_traits, length.out =
length(unique(param_DIST_between_MEAN)))
mean_mean.param <- rep(round(sort(mean_mean.param.interm), 2),
N_repet_Param)
mean.sp <- rnorm(length(unique(sp)),
mean = mean_mean.param, sd = mean_sd.param[n])
sd.sp <- rnorm(length(unique(sp)),
mean = sd_mean.param[n], sd = sd_sd.param[n])
ex.traits2<-array(NA, dim=c(1000, 2))
colnames(ex.traits2) <- paste("traits", c("a", "b"), sep=" ")
# Draw the individual traits depending on species attributes
for(s in unique(ex.sp2)){
#traits a : normale distribution
ex.traits2[ex.sp2==s, 1] <-
rnorm(500,  rep(mean.sp[unique(ex.sp2)==s], 500),
rep(sd.sp[unique(ex.sp2)==s], 500))[1:sum(ex.sp2==s)]
#traits b : uniform distribution
ex.traits2[ex.sp2==s, 2] <-
runif(500, min = rep(mean.sp[unique(ex.sp2)==s], 500) -
rep(sd.sp[unique(ex.sp2)==s], 500),
max = rep(mean.sp[unique(ex.sp2)==s], 500) +
rep(sd.sp[unique(ex.sp2)==s], 500) )[1:sum(ex.sp2==s)]
}
#stock results
mean.sp_stock2[[n]] <- mean.sp
sd.sp_stock2[[n]] <- sd.sp
res.simu.traits2[[n]] <- ex.traits2
res.simu2[[n]] <- Tstats(ex.traits2, ex.indplot2, ex.sp2,
printprogress = FALSE)
res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
xx<-sort(unlist(lapply(res.simu2.pval, function(x) x[1:10,])))
plot(xx, type="l", main="T_IP.IC")
abline(h=0.95)
nbre_beta_error<-sum(xx<0.95)/length(xx)
text(50, 0.8, labels=paste("beta error", 1 - nbre_beta_error, sep="="),
cex=0.5, pos=4)
meanSES.2 <- lapply(res.simu2, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
SES.inf.MEAN <- mean(unlist(lapply(res.simu2, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf,
na.rm=T))), na.rm=T)
plot(meanSES.2, lapply(mean.sp_stock2, mean))
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean)))
abline(v = SES.inf.MEAN)
plot(meanSES.2, lapply(sd.sp_stock2, mean))
cor.test(unlist(meanSES.2), unlist(lapply(sd.sp_stock2, mean)))
abline(v = SES.inf.MEAN)
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/
unlist(lapply(sd.sp_stock2, mean)))
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/
unlist(lapply(sd.sp_stock2, mean)))
abline(v = SES.inf.MEAN)
boxplot(unlist(meanSES.2) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.2) ~  mean_mean.param, horizontal = T)
cor.test(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
plot(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
abline(v=SES.inf.MEAN)
plotDistri(ex.traits2,  rep("toutes_sp", times = dim(ex.traits2)[1]),
ex.indplot2, plot.ask= F)
plotDistri(ex.traits2,  rep("region", times = dim(ex.traits2)[1]),
ex.sp2, plot.ask = F)
plot(res.simu2[[n]])
mean_dist_between_com <- lapply(mean.com_stock3, function(x) mean(dist(x)))
mean_sd_of_com <- lapply(sd.com_stock3, function(x) mean(x))
xx<-sort(unlist(lapply(res.simu3.pval, function(x) x[21:30,])))
plot(xx, type="l", main="T_IC.IR")
abline(h=0.95)
nbre_beta_error<-sum(xx<0.95)/length(xx)
text(50, 0.8, labels=paste("beta error", 1 - nbre_beta_error, sep="="),
cex=0.5, pos=4)
xx<-sort(unlist(lapply(res.simu3.pval, function(x) x[41:50,])))
plot(xx, type="l", main="T_PC.PR")
abline(h=0.95)
nbre_beta_error<-sum(xx<0.95)/length(xx)
text(50, 0.8, labels=paste("beta error", 1- nbre_beta_error, sep="="),
cex=0.5, pos=4)
meanSES.3.T_IC.IR <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses))
plot(meanSES.3.T_IC.IR, lapply(mean.com_stock3, mean))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
plot(meanSES.3.T_IC.IR, lapply(sd.com_stock3, mean))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
plot(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
meanSES.3.T_IC.IR.distriNorm <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,1]))
meanSES.3.T_IC.IR.distriUni <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,2]))
plot(unlist(meanSES.3.T_IC.IR.distriNorm), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)), pch=16)
points(unlist(meanSES.3.T_IC.IR.distriUni), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)), pch=16, col="purple")
meanSES.3.T_PC.PR <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses))
meanSES.3.T_PC.PR.distriNorm <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,1]))
meanSES.3.T_PC.PR.distriUni <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,2]))
plot(meanSES.3.T_PC.PR , lapply(mean.com_stock3, mean))
cor.test(unlist(meanSES.3.T_PC.PR), unlist(lapply(mean.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
plot(meanSES.3.T_PC.PR , lapply(sd.com_stock3, mean))
cor.test(unlist(meanSES.3.T_PC.PR), unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
plot(unlist(meanSES.3.T_PC.PR ), unlist(lapply(mean.com_stock3, mean))
/unlist(lapply(sd.com_stock3, mean)))
cor.test(unlist(meanSES.3.T_PC.PR ), unlist(lapply(mean.com_stock3, mean))
/unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
boxplot(unlist(meanSES.3.T_IC.IR) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.3.T_IC.IR) ~  mean_mean.param, horizontal = T)
param.mean_sd <- mean_mean.param/sd_mean.param
cor.test(unlist(meanSES.3.T_IC.IR) ,  param.mean_sd)
plot(unlist(meanSES.3.T_IC.IR.distriUni), param.mean_sd, pch=16)
points(unlist(meanSES.3.T_IC.IR.distriNorm) ,  param.mean_sd, pch=16, col="purple")
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
points(unlist(meanSES.3.T_PC.PR.distriUni), mean_mean.param/sd_mean.param, pch=5)
points(unlist(meanSES.3.T_PC.PR.distriNorm) ,  mean_mean.param/sd_mean.param, pch=5, col="purple")
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf,
na.rm=T))), na.rm=T))
plotDistri(ex.traits3,  ex.indplot3, ex.sp3, plot.ask= F)
plotDistri(ex.traits3,  rep("toutes_sp", times = dim(ex.traits3)[1]),
ex.indplot3, plot.ask= F)
plotDistri(ex.traits3,  rep("region", times = dim(ex.traits3)[1]),
ex.sp3, plot.ask= F)
plot(res.simu3[[n]])
mean_dist_between_com <- lapply(mean.com_stock3, function(x) mean(dist(x)))
mean_sd_of_com <- lapply(sd.com_stock3, function(x) mean(x))
xx<-sort(unlist(lapply(res.simu3.pval, function(x) x[21:30,])))
plot(xx, type="l", main="T_IC.IR")
abline(h=0.95)
nbre_beta_error<-sum(xx<0.95)/length(xx)
text(50, 0.8, labels=paste("beta error", 1 - nbre_beta_error, sep="="),
cex=0.5, pos=4)
xx<-sort(unlist(lapply(res.simu3.pval, function(x) x[41:50,])))
plot(xx, type="l", main="T_PC.PR")
abline(h=0.95)
nbre_beta_error<-sum(xx<0.95)/length(xx)
text(50, 0.8, labels=paste("beta error", 1- nbre_beta_error, sep="="),
cex=0.5, pos=4)
meanSES.3.T_IC.IR <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses))
plot(meanSES.3.T_IC.IR, lapply(mean.com_stock3, mean))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
plot(meanSES.3.T_IC.IR, lapply(sd.com_stock3, mean))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
plot(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)))
cor.test(unlist(meanSES.3.T_IC.IR), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
meanSES.3.T_IC.IR.distriNorm <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,1]))
meanSES.3.T_IC.IR.distriUni <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses[,2]))
plot(unlist(meanSES.3.T_IC.IR.distriNorm), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)), pch=16)
points(unlist(meanSES.3.T_IC.IR.distriUni), unlist(lapply(mean.com_stock3, mean))/unlist(lapply(sd.com_stock3, mean)), pch=16, col="purple")
meanSES.3.T_PC.PR <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses))
meanSES.3.T_PC.PR.distriNorm <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,1]))
meanSES.3.T_PC.PR.distriUni <- lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses[,2]))
plot(meanSES.3.T_PC.PR , lapply(mean.com_stock3, mean))
cor.test(unlist(meanSES.3.T_PC.PR), unlist(lapply(mean.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
plot(meanSES.3.T_PC.PR , lapply(sd.com_stock3, mean))
cor.test(unlist(meanSES.3.T_PC.PR), unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
plot(unlist(meanSES.3.T_PC.PR ), unlist(lapply(mean.com_stock3, mean))
/unlist(lapply(sd.com_stock3, mean)))
cor.test(unlist(meanSES.3.T_PC.PR ), unlist(lapply(mean.com_stock3, mean))
/unlist(lapply(sd.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
boxplot(unlist(meanSES.3.T_IC.IR) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.3.T_IC.IR) ~  mean_mean.param, horizontal = T)
param.mean_sd <- mean_mean.param/sd_mean.param
cor.test(unlist(meanSES.3.T_IC.IR) ,  param.mean_sd)
plot(unlist(meanSES.3.T_IC.IR.distriUni), param.mean_sd, pch=16)
points(unlist(meanSES.3.T_IC.IR.distriNorm) ,  param.mean_sd, pch=16, col="purple")
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_2$ses.inf,
na.rm=T))), na.rm=T))
points(unlist(meanSES.3.T_PC.PR.distriUni), mean_mean.param/sd_mean.param, pch=5)
points(unlist(meanSES.3.T_PC.PR.distriNorm) ,  mean_mean.param/sd_mean.param, pch=5, col="purple")
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf,
na.rm=T))), na.rm=T))
plotDistri(ex.traits3,  ex.indplot3, ex.sp3, plot.ask= F)
plotDistri(ex.traits3,  rep("toutes_sp", times = dim(ex.traits3)[1]),
ex.indplot3, plot.ask= F)
plotDistri(ex.traits3,  rep("region", times = dim(ex.traits3)[1]),
ex.sp3, plot.ask= F)
plot(res.simu3[[n]])
plot(meanSES.3.T_PC.PR , lapply(mean.com_stock3, mean))
cor.test(unlist(meanSES.3.T_PC.PR), unlist(lapply(mean.com_stock3, mean)))
abline(v=mean(unlist(lapply(res.simu3, function(x)
mean(ses.listofindex(as.listofindex(x))$index_1_3$ses.inf, na.rm=T))), na.rm=T))
boxplot(unlist(meanSES.3.T_IC.IR) ~  sd_mean.param, horizontal = T)
sd_mean.param
sd_mean.param <- sample (rep(param_SD, N_repet_Param),
size = length(rep(param_SD, N_repet_Param)),
replace=F)
sd_mean.param
param_SD
N_repet_Param
