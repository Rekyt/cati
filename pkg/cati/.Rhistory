library(cati)
data(finch.ind)
oldpar<-par(no.readonly = TRUE)
par(mfrow=c(4,4), cex=0.5)
plot_dens(traits.finch, sp.finch,
ind.plot.finch, ylim.cex=3, plot.ask=F,
multipanel=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch,
ind.plot.finch, ylim.cex=3, plot.ask=F,
multipanel=F, leg=F)
plotDistri(traits.finch, sp.finch,
ind.plot.finch, multipanel=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch,
ylim.cex=3, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(5,5), cex=0.5)
plotDistri(traits.finch, ind.plot.finch,
sp.finch, ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
oldpar<-par(no.readonly = TRUE)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch,
ylim.cex=3, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(5,5), cex=0.5)
plotDistri(traits.finch, ind.plot.finch,
sp.finch, ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
install.packages("C:/Users/taudiere/Desktop/cati/pkg/cati_0.91.zip", repos=NULL)
library(cati)
data(finch.ind)
oldpar<-par(no.readonly = TRUE)
par(mfrow=c(5,5), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
library(cati)
data(finch.ind)
old.par<-par(no.readonly = TRUE)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch,
ylim.cex=3, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(5,5), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par()
par(oldpar)
par(old.par)
old.par<-par()
par(old.par)
par()
x<-par()
x
par(x)
x
par()
x
x$pin
?par
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch,
ylim.cex=3, plot.ask=F, multipanel=F, leg=F)
data(finch.ind)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch,
ylim.cex=3, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
old.par<-par(no.readonly = TRUE)
plotDistri(traits.finch, rep("region", times=dim(traits.finch)[1]),
sp.finch, ylim.cex=6, plot.ask=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[,1], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par(oldpar)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=T, leg=T)
par(oldpar)
par(old.par)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=T, leg=T)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par(old.par)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=T, leg=T)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=T, leg=T)
par(old.par)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=F)
par(old.par)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
data(finch.ind)
oldpar <- par(no.readonly = TRUE)
#Plot the distribution of trait values for populations,
#species, sites and regional scales.
#First, let try the distribution for all populations
#of Darwin finches.
par(mfrow = c(4,4), cex = 0.5)
plotDistri(traits.finch, sp.finch, ind.plot.finch, ylim.cex = 3,
plot.ask = FALSE, multipanel = FALSE, leg = FALSE)
par(mfrow = c(1,1), cex = 1)
#Then we can inverse the second and the third arguments
#to plot the distribution for all finches species.
par(mfrow = c(4,4), cex = 0.5)
plotDistri(traits.finch, ind.plot.finch, sp.finch, ylim.cex = 8,
plot.ask = FALSE, multipanel = FALSE, leg = FALSE)
par(mfrow = c(1,1), cex = 1)
#You can also plot trait distribution for all species in the region
plotDistri(traits.finch, rep("region", times = dim(traits.finch)[1]),
sp.finch, ylim.cex = 6, plot.ask = FALSE, leg = FALSE)
#You can also plot trait distribution for all sites
#without taking into account species identity
plotDistri(traits.finch, rep("toutes_sp", times = dim(traits.finch)[1]),
ind.plot.finch, ylim.cex = 3, plot.ask = FALSE)
par(oldpar)
par(old.par)
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(1,1))
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(2,2))
plotDistri(traits.finch, ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(2,2))
plotDistri(traits.finch[1,], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
traits.finch
plotDistri(traits.finch[,1], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[,1:2], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[,1:2], ind.plot.finch, sp.finch,
ylim.cex=5, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[,1:2], ind.plot.finch, sp.finch,
ylim.cex=5, plot.ask=F, multipanel=F, leg=T)
plotDistri(traits.finch[,1:2], ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
plotDistri(as.matrix(traits.finch[,1]), ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
par(mfrow=c(2,2))
plotDistri(as.matrix(traits.finch[,1]), ind.plot.finch, sp.finch,
ylim.cex=8, plot.ask=F, multipanel=F, leg=T)
<<dev='pdf'>>=
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, rep("region", times=dim(traits.finch)[1]),
sp.finch, ylim.cex=6, plot.ask=F, leg=F)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F)
@
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, plot.ask=F)
par(mfrow=c(4,4), cex=0.5)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F)
ind.plot.finch, ylim.cex=3, plot.ask=F,polygon=T)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F,polygon=T)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F,polyg=T)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F,polyg=F)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F,polyg=T)
plotDistri(traits.finch, rep("toutes_sp", times=dim(traits.finch)[1]),
ind.plot.finch, ylim.cex=3, plot.ask=F, cex.leg=0.5)
comm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))
comm.sp<-table(sp.finch, ind.plot.finch)
class(comm.sp)<-"matrix"
traits.finch.sp<-apply( apply(traits.finch, 2, scale ), 2,
function(x) tapply(x, sp.finch, mean, na.rm=T))
mat.dist<-as.matrix(dist(traits.finch.sp))^2
res.rao<-RaoRel(sample=as.matrix(comm.sp),
dfunc=mat.dist, dphyl=NULL,
weight=F, Jost=F, structure=NULL)
witRao<-res.rao$FD$Mean_Alpha  #overall within species variance
betRao<-res.rao$FD$Beta_add    #between species variance
totRao<-res.rao$FD$Gamma       #the total variance
witRao+betRao
totRao
res.rao.w<-RaoRel(sample=as.matrix(comm.sp),
dfunc=mat.dist, dphyl=NULL,
weight=T, Jost=F, structure=NULL)
witRao.w<-res.rao.w$FD$Mean_Alpha  #overall within species variance
betRao.w<-res.rao.w$FD$Beta_add    #between species variance
totRao.w<-res.rao.w$FD$Gamma       #the total variance
witRao.w
betRao.w
barplot(cbind(c(witRao.w, betRao.w), c(witRao, betRao)),
names.arg =c("abundance" ,"presence"),
legend.text=c("within species", "between species"),
ylab="Rao", ylim=c(0,10))
barplot(cbind(c(witRao.w, betRao.w), c(witRao, betRao)),
names.arg =c("abundance" ,"presence"),
legend.text=c("within species", "between species"),
ylab="Rao", ylim=c(0,10))
barplot(cbind(c(witRao.w, betRao.w), c(witRao, betRao)),
names.arg =c("abundance" ,"presence"),
legend.text=c("within species", "between species"),
ylab="Rao", ylim=c(0,10))
comm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))
comm.sp<-table(sp.finch, ind.plot.finch)
class(comm.sp)<-"matrix"
comm.sp
comm
comm<-t(table(ind.plot.finch,1:length(ind.plot.finch))) #create individuals community matrix
comm.sp<-table(sp.finch, ind.plot.finch)  #create species community matrix
traits.finch.sp<-apply( apply(traits.finch, 2, scale ), 2,
function(x) tapply(x, sp.finch, mean, na.rm=T))
mat.dist<-as.matrix(dist(traits.finch.sp))^2
res.rao<-RaoRel(sample=as.matrix(comm.sp),
dfunc=mat.dist, dphyl=NULL,
weight=F, Jost=F, structure=NULL)
class(comm.sp)
class(comm.sp)<-"matrix"
res.rao<-RaoRel(sample=as.matrix(comm.sp),
dfunc=mat.dist, dphyl=NULL,
weight=F, Jost=F, structure=NULL)
witRao<-res.rao$FD$Mean_Alpha  #overall within species variance
betRao<-res.rao$FD$Beta_add    #between species variance
totRao<-res.rao$FD$Gamma       #the total variance
comm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))
require(mice)
traits=traits.finch
mice<-mice(traits.finch)
traits.finch.mice<-complete(mice)
traits.finch.mice.sp<-apply(apply(traits.finch.mice, 2, scale ), 2,
function(x) tapply(x, sp.finch, mean, na.rm=T))
trait.rao.w<-list()
witRao.w.bytrait<-c()
betRao.w.bytrait<-c()
for(t in 1 : 4){
trait.rao.w[[t]]<-RaoRel(sample=as.matrix(comm.sp),
dfunc=dist(traits.finch.mice.sp[,t]),
dphyl=NULL, weight=T, Jost=F, structure=NULL)
witRao.w.bytrait<-c(witRao.w.bytrait, trait.rao.w[[t]]$FD$Mean_Alpha)
betRao.w.bytrait<-c(betRao.w.bytrait, trait.rao.w[[t]]$FD$Beta_add)
}
traits.finch.mice.sp
trait.rao.w<-list()
witRao.w.bytrait<-c()
betRao.w.bytrait<-c()
for(t in 1 : 4){
trait.rao.w[[t]]<-RaoRel(sample=as.matrix(comm.sp),
dfunc=dist(traits.finch.mice.sp[,t]),
dphyl=NULL, weight=T, Jost=F, structure=NULL)
witRao.w.bytrait<-c(witRao.w.bytrait, trait.rao.w[[t]]$FD$Mean_Alpha)
betRao.w.bytrait<-c(betRao.w.bytrait, trait.rao.w[[t]]$FD$Beta_add)
}
barplot(t(cbind( witRao.w.bytrait, betRao.w.bytrait)),
names.arg = colnames(traits.finch),
legend.text=c("within species", "between species"),
ylab="Rao", ylim=c(0,1.5))
barplot(t(cbind( witRao.w.bytrait, betRao.w.bytrait)),
names.arg = colnames(traits.finch),
legend.text=c("within species", "between species"),
ylab="Rao", ylim=c(0,1.5))
res.decomp<-decomp_within(traits=traits.finch, sp=sp.finch,
ind.plot=ind.plot.finch, print=FALSE)
res.decomp<-decompWithin(traits=traits.finch, sp=sp.finch,
ind.plot=ind.plot.finch, print=FALSE)
res.decomp
barplot(res.decomp)
par(mfrow=c(2,2))
barplot(res.decomp, resume=F)
par(mfrow=c(1,1))
barplot(res.decomp)
par(mfrow=c(2,2))
barplot(res.decomp, resume=F)
par(mfrow=c(1,1))
vec<- seq(1,length(sp.finch)*2, by=2)
genus<-as.vector(unlist(strsplit(as.vector(sp.finch),"_"))[vec])
fact<-cbind(genus=as.factor(genus),
species=as.factor(as.vector(sp.finch)),
sites=as.factor(as.vector(ind.plot.finch)))
res.partvar.finch<-partvar(traits=traits.finch, factors=fact)
res.partvar.finch
par(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))
colors<-c(rgb(102,167,0,  maxColorValue = 255),
rgb(185,210,0,  maxColorValue = 255),
rgb(98,174,255,  maxColorValue = 255),
rgb(158,30,240,  maxColorValue = 255))
pie_partvar(res.partvar.finch, col=colors)
par(old.par)
bar_partvar(res.partvar.finch, col=colors,
leg=TRUE)
piePartvar(res.partvar.finch, col=colors)
par(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))
colors<-c(rgb(102,167,0,  maxColorValue = 255),
rgb(185,210,0,  maxColorValue = 255),
rgb(98,174,255,  maxColorValue = 255),
rgb(158,30,240,  maxColorValue = 255))
piePartvar(res.partvar.finch, col=colors)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
par(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))
colors<-c(rgb(102,167,0,  maxColorValue = 255),
rgb(185,210,0,  maxColorValue = 255),
rgb(98,174,255,  maxColorValue = 255),
rgb(158,30,240,  maxColorValue = 255))
piePartvar(res.partvar.finch, col=colors)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
plot_sp_pop(traits.finch, ind.plot.finch, sp.finch, silent=TRUE)
plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent=TRUE)
res.partvar.finch<-partvar(traits=traits.finch, factors=fact)
res.partvar.finch
par(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))
colors<-c(rgb(102,167,0,  maxColorValue = 255),
rgb(98,174,255,  maxColorValue = 255),
rgb(158,30,240,  maxColorValue = 255))
piePartvar(res.partvar.finch, col=colors)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
rgb(185,210,0,  maxColorValue = 255),
leg=TRUE)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
piePartvar(res.partvar.finch, col=colors)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
par(mfrow=c(1,1))
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
par(mfrow=c(1,1))
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
old.par
old.par<-par(no.readonly = TRUE)
old.par
old.par$mfrow
par(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))
colors<-c(rgb(102,167,0,  maxColorValue = 255),
rgb(185,210,0,  maxColorValue = 255),
rgb(98,174,255,  maxColorValue = 255),
rgb(158,30,240,  maxColorValue = 255))
piePartvar(res.partvar.finch, col=colors)
par(old.par)
barPartvar(res.partvar.finch, col=colors,
leg=TRUE)
plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent=TRUE)
plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent=TRUE)
plotSpPop(traits.finch, ind.plot.finch, sp.finch,
p.val=0.1,  min.ind.signif=3, silent=TRUE)
plotSpPop(traits.finch, ind.plot.finch, sp.finch,
silent=TRUE, resume=TRUE, col.pop="grey")
plotSpPop(traits.finch, ind.plot.finch, sp.finch,
silent=TRUE, resume=TRUE, col.pop="grey", col.sp="black")
plotSpPop(traits.finch, ind.plot.finch, sp.finch,
silent=TRUE, resume=TRUE, col.pop="grey", col.sp="black",
p.val=0.1,  min.ind.signif=3)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
attributes(res.finch)
res.finch<-Tstats(traits.finch, ind.plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
attributes(res.finch)
Tstats class is associated to S3 methods plot, barplot, print and summary
plot(res.finch, ylim=c(0,2))
res.finch<-Tstats(traits.finch, ind.plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
attributes(res.finch)
plot(res.finch, ylim=c(0,2))
plot(res.finch)
lines(v=0)
abline(v=0)
par(mfrow=c(2,2))
plot(res.finch, type="color_cond")
plot(res.finch, type="simple")
plot(res.finch, type="simple_sd")
plot(res.finch, type="barplot")
par(old.par)
library(cati)
data(finch.ind)
dim(traits.finch)
dim(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
length(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
summary(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
levels(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
str(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
table(sp.finch) #the trait matrix contain 2513 individuals values for 4 traits
dim(finch.finch) #the trait matrix contain 2513 individuals values for 4 traits
dim(finch.ind) #the trait matrix contain 2513 individuals values for 4 traits
dim(traits.finch) #the trait matrix contains 2513 individuals values for 4 traits
dim(finch.ind) #the trait matrix contain 2677 individuals values for 4 traits
table(ind.plot.finch) #the sites names vector contains 2513 individuals belonging to 12 species
finch.ind
barplot(res.finch, ylim=c(0,3.5))
res.finch<-Tstats(traits.finch, ind.plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
attributes(res.finch)
plot(res.finch)
abline(v=0)
par(mfrow=c(2,2))
plot(res.finch, type="color_cond")
plot(res.finch, type="simple")
plot(res.finch, type="simple_sd")
plot(res.finch, type="barplot")
par(old.par)
barplot(res.finch, ylim=c(0,3.5))
attributes(summary(res.finch))
head(summary(res.finch)$p.value, 10)
attributes(summary(res.finch))
summary(res.finch)
sumTstats(res.finch)
sum_Tstats(res.finch)
summary(res.finch)$p.value
res.finch<-Tstats(traits.finch, ind.plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
attributes(res.finch)
res.finch
str(res.finch)
summary(res.finch)
attributes(sum_Tstats(res.finch))
head(sum_Tstats(res.finch)$p.value, 10)
par(mfrow=c(2,3))
plotCorTstats(res.finch, plot.ask=FALSE, multipanel=F)
plotSESVar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
plotSESvar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
species.richness<-table(ind.plot.finch)
plotSESvar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
par(mfrow=c(2,2))
species.richness<-table(ind.plot.finch)
plotSESvar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
par(mfrow=c(2,2))
plotSESvar(as.listofindex(list(res.finch)), species.richness,
resume=T, multipanel=F)
par(mfrow=c(1,1))
par(mfrow=c(2,3))
plotCorTstats(res.finch, plot.ask=FALSE, multipanel=F)
par(mfrow=c(2,2))
species.richness<-table(ind.plot.finch)
plotSESvar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
par(mfrow=c(2,2))
plotSESvar(as.listofindex(list(res.finch)), species.richness,
resume=T, multipanel=F)
par(mfrow=c(1,1))
res.finch<-Tstats(traits.finch, ind.plot=ind.plot.finch, sp=sp.finch,
nperm=9, print=FALSE)
res.finch
attributes(res.finch)
str(res.finch)
We can also see T-statistics correlations and theirs correlation with others variables (e.g. a gradient variable, or the species richness).
par(mfrow=c(2,3))
plotCorTstats(res.finch, plot.ask=FALSE, multipanel=F)
par(mfrow=c(2,2))
species.richness<-table(ind.plot.finch)
plotSESvar(as.listofindex(list(res.finch)), species.richness,
multipanel=F)
par(mfrow=c(2,2))
plotSESvar(as.listofindex(list(res.finch)), species.richness,
resume=T, multipanel=F)
par(mfrow=c(1,1))
funct<-c("mean(x, na.rm=T)", "kurtosis(x, na.rm=T)",
"max(x, na.rm=T) - min(x, na.rm=T)", "CVNND(x)"  )
res.finch.sp_mn2<-ComIndex(traits=traits.finch, index=funct, sp=sp.finch,
nullmodels=c(2,2,2,2), ind.plot=ind.plot.finch,
nperm=9, print=FALSE)
res.finch.sp_mn3<-ComIndex(traits=traits.finch, index=funct, sp=sp.finch,
nullmodels=c(3,3,3,3), ind.plot=ind.plot.finch,
nperm=9, print=FALSE)
res.finch.sp_mn3<-ComIndex(traits=traits.finch, index=funct, sp=sp.finch,
nullmodels=rep("2sp",4), ind.plot=ind.plot.finch,
nperm=9, print=FALSE)
res.finch.sp_mn2<-ComIndex(traits=traits.finch, index=funct, sp=sp.finch,
nullmodels=c(2,2,2,2), ind.plot=ind.plot.finch,
nperm=9, print=FALSE)
res.finch.sp_mn.2sp<-ComIndex(traits=traits.finch, index=funct, sp=sp.finch,
nullmodels=rep("2sp",4), ind.plot=ind.plot.finch,
nperm=9, print=FALSE)
?ComIndex
help.start()
install.packages("qpdf")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
install.packages("knitr")
