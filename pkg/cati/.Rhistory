res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
require(grDevices) # for colours
filled.contour(volcano, color = terrain.colors, asp = 1) # simple
x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
filled.contour(x, y, volcano, color = terrain.colors,
plot.title = title(main = "The Topography of Maunga Whau",
xlab = "Meters North", ylab = "Meters West"),
plot.axes = { axis(1, seq(100, 800, by = 100))
axis(2, seq(100, 600, by = 100)) },
key.title = title(main = "Height\n(meters)"),
key.axes = axis(4, seq(90, 190, by = 10)))  # maybe also asp = 1
mtext(paste("filled.contour(.) from", R.version.string),
side = 1, line = 4, adj = 1, cex = .66)
x
y
meanSES.2
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
meanSES.2
filled.contour(mean.sp, sd.sp, meanSES.2)
sd.sp
filled.contour(mean.sp, sd.sp, -meanSES.2)
mean.sp
filled.contour(mean.sp, sd.sp, unlist(-meanSES.2))
sd.sp
x
y
volcano
unlist(-meanSES.2)
unlist(-meanSES.2)
unlist(meanSES.2)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), 20), ncol=20)
mat.interm_meanSES.2
filled.contour(sort(mean.sp), sd.sp, mat.interm_meanSES.2[order(mean.sp), order(sd.sp)])
filled.contour(sort(mean.sp), sort(sd.sp), mat.interm_meanSES.2[order(mean.sp), order(sd.sp)])
filled.contour(sort(mean.sp), sort(sd.sp), mat.interm_meanSES.2[order(mean.sp), order(sd.sp)],  color = terrain.colors)
mat.interm_meanSES.2
unlist(meanSES.2)
filled.contour(sort(mean.sp), sort(sd.sp), mat.interm_meanSES.2[order(sd.sp), order(mean.sp)],  color = terrain.colors)
order(sd.sp)
mat.interm_meanSES.2
order(sd.sp)
length(order(sd.sp))
filled.contour(sort(mean.sp), sort(sd.sp), mat.interm_meanSES.2,  color = terrain.colors)
mean.sp
sort(mean.sp)
filled.contour(sort(mean.sp), sort(sd.sp), mat.interm_meanSES.2[order(mean.sp),],  color = terrain.colors)
filled.contour(volcano, color = terrain.colors, asp = 1) # simple
volcano
dim(volcano)
x
filled.contour(x = sort(mean.sp), y = sort(sd.sp), mat.interm_meanSES.2[order(mean.sp), order(sd.sp)],  color = terrain.colors)
mat.interm_meanSES.2
mat.interm_meanSES.2[order(mean.sp), order(sd.sp)]
filled.contour(mat.interm_meanSES.2)
plot(unlist(meanSES.2), sd.sp)
param_SD <- seq(10, 50,length.out = 10)
param_SD
#paramêtre loi lognormal pour définir le vecteur sp.plot:
sdlog = 1.5
com <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J")
sp <- paste("sp", seq(1:20), sep="")
#mean_mean.param <- rep(100, nperm)
#mean_sd.param <- rep(40, nperm)
#sd_mean.param <- rep(-3, nperm)
#sd_sd.param <- rep(0.2, nperm)
N_repet_Param <- 2 # N_repet_Param * length(param_MEAN | param_SD) doit être égal nperm
param_MEAN<-round(sort(seq(100, 200,length.out = 10)), 2)
mean_mean.param <- rep(param_MEAN, N_repet_Param)
mean_sd.param <- rep(50, nperm)
param_SD <- seq(10, 50,length.out = 10)
sd_mean.param <- sample (rep(param_SD, N_repet_Param), size = length(rep(param_SD, N_repet_Param)), replace=F)
sd_sd.param <- rep(1, nperm)
#Start simulation
#nperm= 10 donne 1000 p.value (5 traits * 10 sites * 2(test bilatéral))
nperm <- 20
res.simu2 <- list()
res.simu2.pval <- list()
res.simu.traits2 <- list()
for(n in 1:nperm){
ex.sp2<-c()
ex.com2<-matrix(0, nrow=10, ncol=20)
for(i in 1: 10){
ex.com.interm <- table(sample(sp, size=100, prob=rlnorm(20, 0, sdlog), replace=T))
ex.com2[i, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp2 <- c(ex.sp2, rep(sp, times=ex.com2[i,]))
}
ex.indplot2 <- as.factor(rep(com, 100))
#Defining mean and sd by species
mean.sp <- rnorm(20, mean = mean_mean.param[n], sd = mean_sd.param[n])
sd.sp <- rnorm(20, mean = sd_mean.param[n], sd = sd_sd.param[n])
ex.traits2<-array(NA, dim=c(1000,5))
colnames(ex.traits2) <- paste("traits", c("a", "b", "c", "d", "e"), sep=" ")
for(s in unique(ex.sp2)){
for(i in 1:3){
ex.traits2[ex.sp2==s,i] <- rnorm(500,  rep(mean.sp[unique(ex.sp2)==s], 500), rep(sd.sp[unique(ex.sp2)==s], 500))[1:sum(ex.sp2==s)]
}
for(i in 4:5){
ex.traits2[ex.sp2==s,i] <- runif(500, min = rep(mean.sp[unique(ex.sp2)==s], 500) - rep(sd.sp[unique(ex.sp2)==s], 500), max = rep(mean.sp[unique(ex.sp2)==s], 500) + rep(sd.sp[unique(ex.sp2)==s], 500) )[1:sum(ex.sp2==s)]
}
}
#stock results
res.simu.traits2[[n]] <- ex.traits2
res.simu2[[n]] <- Tstats(ex.traits2, ex.indplot2, ex.sp2, printprogress = FALSE)
res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), 20), ncol=20)
filled.contour(x = sort(mean.sp), y = sort(sd.sp), mat.interm_meanSES.2[order(mean.sp), order(sd.sp)],  color = terrain.colors)
mean.sp
sd.sp
sd_mean.param
sd.sp <- rnorm(20, mean = sd_mean.param[n], sd = sd_sd.param[n])
sd.sp
sd_sd.param
rnorm
mean.sp
mean_mean.param
mean_sd.param
sd_sd.param
sd_mean.param
sd_mean.param[n]
mean_mean.param[n]
N_repet_Param <- 5 # N_repet_Param * length(param_MEAN | param_SD) doit être égal nperm
param_MEAN<-round(sort(seq(100, 200,length.out = 10)), 2)
mean_mean.param <- rep(param_MEAN, N_repet_Param)
mean_sd.param <- rep(50, nperm)
param_SD <- seq(10, 50,length.out = 10)
sd_mean.param <- sample (rep(param_SD, N_repet_Param), size = length(rep(param_SD, N_repet_Param)), replace=F)
sd_sd.param <- rep(5, nperm)
#Start simulation
#nperm= 10 donne 1000 p.value (5 traits * 10 sites * 2(test bilatéral))
nperm <- 50
mean.sp_stock <- list()
sd.sp_stock <- list()
res.simu2 <- list()
res.simu2.pval <- list()
res.simu.traits2 <- list()
for(n in 1:nperm){
ex.sp2<-c()
ex.com2<-matrix(0, nrow=10, ncol=20)
for(i in 1: 10){
ex.com.interm <- table(sample(sp, size=100, prob=rlnorm(20, 0, sdlog), replace=T))
ex.com2[i, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp2 <- c(ex.sp2, rep(sp, times=ex.com2[i,]))
}
ex.indplot2 <- as.factor(rep(com, 100))
#Defining mean and sd by species
mean.sp <- rnorm(20, mean = mean_mean.param[n], sd = mean_sd.param[n])
sd.sp <- rnorm(20, mean = sd_mean.param[n], sd = sd_sd.param[n])
ex.traits2<-array(NA, dim=c(1000,5))
colnames(ex.traits2) <- paste("traits", c("a", "b", "c", "d", "e"), sep=" ")
for(s in unique(ex.sp2)){
for(i in 1:3){
ex.traits2[ex.sp2==s,i] <- rnorm(500,  rep(mean.sp[unique(ex.sp2)==s], 500), rep(sd.sp[unique(ex.sp2)==s], 500))[1:sum(ex.sp2==s)]
}
for(i in 4:5){
ex.traits2[ex.sp2==s,i] <- runif(500, min = rep(mean.sp[unique(ex.sp2)==s], 500) - rep(sd.sp[unique(ex.sp2)==s], 500), max = rep(mean.sp[unique(ex.sp2)==s], 500) + rep(sd.sp[unique(ex.sp2)==s], 500) )[1:sum(ex.sp2==s)]
}
}
#stock results
mean.sp_stock[[n]] <- mean.sp
sd.sp_stock[[n]] <- sd.sp
res.simu.traits2[[n]] <- ex.traits2
res.simu2[[n]] <- Tstats(ex.traits2, ex.indplot2, ex.sp2, printprogress = FALSE)
res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
plot(meanSES.2, mean.sp_stock)
plot(meanSES.2, sd.sp_stock)
plot(meanSES.2, mean.sp_stock)
meanSES.2
plot(meanSES.2)
plot(unlist(meanSES.2), mean.sp_stock)
plot(unlist(meanSES.2), unlist(mean.sp_stock))
unlist(mean.sp_stock)
length(unlist(mean.sp_stock))
length(unlist(meanSES.2))
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
res.simu2
res.simu2[[1]]
res.simu2[[1]]$ses
res.simu2[[1]]$index_1_1
attributes(res.simu2[[1]])
ses.listofindex(as.listofindex(res.simu2[[1]]))$ses
ses.listofindex(as.listofindex(res.simu2[[1]]))$index_1_1
ses.listofindex(as.listofindex(res.simu2[[1]]))$index_1_1$ses
mean.sp_stock
lapply(mean.sp_stock)
lapply(mean.sp_stock, mean)
plot(meanSES.2, lapply(sd.sp_stock, mean))
plot(meanSES.2, lapply(mean.sp_stock, mean))
plot(meanSES.2, lapply(sd.sp_stock, mean))
filled.contour(x = sort(lapply(mean.sp_stock, mean)), y = sort(lapply(sd.sp_stock, mean)), mat.interm_meanSES.2[order(lapply(mean.sp_stock, mean)), order(lapply(sd.sp_stock, mean))],  color = terrain.colors)
sort(lapply(mean.sp_stock, mean))
filled.contour(x = sort(unlist(lapply(mean.sp_stock, mean))), y = sort(unlist(lapply(sd.sp_stock, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock, mean))), order(unlist(lapply(sd.sp_stock, mean)))],  color = terrain.colors)
mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock, mean))), order(unlist(lapply(sd.sp_stock, mean)))]
order(unlist(lapply(mean.sp_stock, mean)))
order(unlist(lapply(sd.sp_stock, mean)))]
order(unlist(lapply(sd.sp_stock, mean)))]
order(unlist(lapply(sd.sp_stock, mean)))
mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock, mean))), order(unlist(lapply(sd.sp_stock, mean)))]
dim(mat.interm_meanSES.2)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), 20), ncol=20)
filled.contour(x = sort(unlist(lapply(mean.sp_stock, mean))), y = sort(unlist(lapply(sd.sp_stock, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock, mean))), order(unlist(lapply(sd.sp_stock, mean)))],  color = terrain.colors)
dim(mat.interm_meanSES.2)
meanSES.2 <- lapply(res.simu2, function(x) mean(x))$index_1_1$ses))
meanSES.2 <- lapply(res.simu2, function(x) mean(x)$index_1_1$ses))
meanSES.2 <- lapply(res.simu2, function(x) mean(x)$index_1_1$ses)
meanSES.2 <- lapply(res.simu2, function(x) mean(x, na.rm=T)$index_1_1$ses)
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
meanSES.2
dim(meanSES.2)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), ncol=20)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), ncol=nperm)
mat.interm_meanSES.2
filled.contour(x = sort(unlist(lapply(mean.sp_stock, mean))), y = sort(unlist(lapply(sd.sp_stock, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock, mean))), order(unlist(lapply(sd.sp_stock, mean)))],  color = terrain.colors)
sort(unlist(lapply(mean.sp_stock, mean)))
sort(unlist(lapply(sd.sp_stock, mean)))
N_repet_Param <- 2 # N_repet_Param * length(param_MEAN | param_SD) doit être égal nperm
param_MEAN<-round(sort(seq(100, 200,length.out = 10)), 2)
mean_mean.param <- rep(param_MEAN, N_repet_Param)
mean_sd.param <- rep(50, nperm)
param_SD <- seq(10, 50,length.out = 10)
sd_mean.param <- sample (rep(param_SD, N_repet_Param), size = length(rep(param_SD, N_repet_Param)), replace=F)
sd_sd.param <- rep(5, nperm)
#Start simulation
#nperm= 10 donne 1000 p.value (5 traits * 10 sites * 2(test bilatéral))
nperm <- 20
mean.sp_stock <- list()
sd.sp_stock <- list()
res.simu2 <- list()
res.simu2.pval <- list()
res.simu.traits2 <- list()
for(n in 1:nperm){
ex.sp2<-c()
ex.com2<-matrix(0, nrow=10, ncol=20)
for(i in 1: 10){
ex.com.interm <- table(sample(sp, size=100, prob=rlnorm(20, 0, sdlog), replace=T))
ex.com2[i, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp2 <- c(ex.sp2, rep(sp, times=ex.com2[i,]))
}
ex.indplot2 <- as.factor(rep(com, 100))
#Defining mean and sd by species
mean.sp <- rnorm(nperm, mean = mean_mean.param[n], sd = mean_sd.param[n])
sd.sp <- rnorm(nperm, mean = sd_mean.param[n], sd = sd_sd.param[n])
ex.traits2<-array(NA, dim=c(1000,5))
colnames(ex.traits2) <- paste("traits", c("a", "b", "c", "d", "e"), sep=" ")
for(s in unique(ex.sp2)){
for(i in 1:3){
ex.traits2[ex.sp2==s,i] <- rnorm(500,  rep(mean.sp[unique(ex.sp2)==s], 500), rep(sd.sp[unique(ex.sp2)==s], 500))[1:sum(ex.sp2==s)]
}
for(i in 4:5){
ex.traits2[ex.sp2==s,i] <- runif(500, min = rep(mean.sp[unique(ex.sp2)==s], 500) - rep(sd.sp[unique(ex.sp2)==s], 500), max = rep(mean.sp[unique(ex.sp2)==s], 500) + rep(sd.sp[unique(ex.sp2)==s], 500) )[1:sum(ex.sp2==s)]
}
}
#stock results
mean.sp_stock[[n]] <- mean.sp
sd.sp_stock[[n]] <- sd.sp
res.simu.traits2[[n]] <- ex.traits2
res.simu2[[n]] <- Tstats(ex.traits2, ex.indplot2, ex.sp2, printprogress = FALSE)
res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
mean.sp_stock2<-mean.sp_stock2
sd.sp_stock2<-sd.sp_stock2
mean.sp_stock2<-mean.sp_stock
sd.sp_stock2<-sd.sp_stock
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
meanSES.2
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), ncol=nperm)
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))],  color = terrain.colors)
lapply(sd.sp_stock2, mean)
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
lapply(mean.sp_stock2, mean)
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))],  color = terrain.colors)
sort(unlist(lapply(mean.sp_stock2, mean)))
order(unlist(lapply(mean.sp_stock2, mean)))
unlist(lapply(mean.sp_stock2, mean))[order(unlist(lapply(mean.sp_stock2, mean)))]
unlist(lapply(mean.sp_stock2, mean))[order(unlist(lapply(sd.sp_stock2, mean)))]
unlist(lapply(sd.sp_stock2, mean))[order(unlist(lapply(sd.sp_stock2, mean)))]
plot(unlist(lapply(sd.sp_stock2, mean)),(unlist(lapply(sd.sp_stock2, mean))))
plot(unlist(lapply(sd.sp_stock2, mean)),(unlist(lapply(mean.sp_stock2, mean))))
mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))]
rep(unlist(meanSES.2), nperm)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), nrow=nperm)
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))],  color = terrain.colors)
mat.interm_meanSES.2
volcano
mat.interm_meanSES.2
unlist(meanSES.2)[order(unlist(lapply(mean.sp_stock2, mean)))]
unlist(meanSES.2)[order(unlist(lapply(mean.sp_stock2, mean)))]
a <- expand.grid(1:20, 1:20)
b <- matrix(a[,1] + a[,2], 20)
filled.contour(x = 1:20, y = 1:20, z = b,
plot.axes = { axis(1); axis(2); points(10, 10) })
b
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))],  color = terrain.colors)
rep(unlist(meanSES.2), nperm)
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), unlist(meanSES.2),  color = terrain.colors)
filled.contour(x = sort(unlist(lapply(mean.sp_stock2, mean))), y = sort(unlist(lapply(sd.sp_stock2, mean))), as.matrix(unlist(meanSES.2)),  color = terrain.colors)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), nrow=nperm)
mat.interm_meanSES.2
t(mat.interm_meanSES.2)
t(mat.interm_meanSES.2)[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))]
unlist(meanSES.2)
?rep
rep(unlist(meanSES.2), nperm)
rep(unlist(meanSES.2), nperm)[1]
rep(unlist(meanSES.2), nperm)[21]
rep(1:4, 2)
rep(1:4, each = 2)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), each = nperm), nrow=nperm)
mat.interm_meanSES.2
rep(unlist(meanSES.2), each = nperm)
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), each = nperm), ncol=nperm)
mat.interm_meanSES.2
mat.interm_meanSES.2 <- cbind(rep(unlist(meanSES.2), nperm)
)
mat.interm_meanSES.2
mat.interm_meanSES.2 <- rbind(rep(unlist(meanSES.2), nperm)
)
mat.interm_meanSES.2
mat.interm_meanSES.2 <- as.matrix(rbind(rep(unlist(meanSES.2), nperm)), nrow=nperm)
mat.interm_meanSES.2
mat.interm_meanSES.2 <- as.matrix(rbind(rep(unlist(meanSES.2), nperm)), ncol=nperm)
mat.interm_meanSES.2
dim(mat.interm_meanSES.2)
mat.interm_meanSES.2 <- matrix(rbind(rep(unlist(meanSES.2), nperm)), ncol=nperm, nrow=nperm)
mat.interm_meanSES.2
mat.interm_meanSES.2 <- matrix(rbind(rep(unlist(meanSES.2), nperm)), ncol=nperm)
mat.interm_meanSES.2
rep(unlist(meanSES.2), nperm)
unlist(meanSES.2)
for(i in 1:nperm){
mat.interm_meanSES.2 <- cbind(mat.interm_meanSES.2, unlist(meanSES.2))
}
mat.interm_meanSES.2
mat.interm_meanSES.2 <- matrix(rep(unlist(meanSES.2), nperm), nrow=nperm)
mat.interm_meanSES.2
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
mat.interm_meanSES.2
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid, cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
#S-PLUS example
require(stats)
attach(environmental)
ozo.m <- loess((ozone^(1/3)) ~ wind * temperature * radiation,
parametric = c("radiation", "wind"), span = 1, degree = 2)
w.marginal <- seq(min(wind), max(wind), length.out = 50)
t.marginal <- seq(min(temperature), max(temperature), length.out = 50)
r.marginal <- seq(min(radiation), max(radiation), length.out = 4)
wtr.marginal <- list(wind = w.marginal, temperature = t.marginal,
radiation = r.marginal)
grid <- expand.grid(wtr.marginal)
grid[, "fit"] <- c(predict(ozo.m, grid))
contourplot(fit ~ wind * temperature | radiation, data = grid,
cuts = 10, region = TRUE,
xlab = "Wind Speed (mph)",
ylab = "Temperature (F)",
main = "Cube Root Ozone (cube root ppb)")
detach()
require(lattice)
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid, cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
z
grid$z
dim(grid$z)
length(grid$z)
x
y
levelplot(mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))]~sort(unlist(lapply(mean.sp_stock2, mean)))*sort(unlist(lapply(sd.sp_stock2, mean)))
levelplot(mat.interm_meanSES.2[order(unlist(lapply(mean.sp_stock2, mean))), order(unlist(lapply(sd.sp_stock2, mean)))]~sort(unlist(lapply(mean.sp_stock2, mean)))*sort(unlist(lapply(sd.sp_stock2, mean))))
unlist(meanSES.2)
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
boxplot(unlist(meanSES.2) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.2) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.2) ~  mean_mean.param, horizontal = T)
plot(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
cor.test(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
ses.listofindex
??ses.listofindex
require(cati)
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(unlist(meanSES.2) ,  mean.sp_stock2/sd.sp_stock2)
plot(unlist(meanSES.2) ,  lapply(mean.sp_stock2, mean)/lapply(sd.sp_stock2, mean))
lapply(mean.sp_stock2, mean)
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
nperm <- N_repet_Param*length(param_MEAN)
N_repet_Param <- 5 # N_repet_Param * length(param_MEAN | param_SD) doit être égal nperm
param_MEAN<-round(sort(seq(10, 200,length.out = 10)), 2)
nperm <- N_repet_Param*length(param_MEAN)
nperm
N_repet_Param <- 5 # N_repet_Param * length(param_MEAN | param_SD) doit être égal nperm
param_MEAN<-round(sort(seq(10, 200,length.out = 10)), 2)
mean_mean.param <- rep(param_MEAN, N_repet_Param)
mean_sd.param <- rep(50, nperm)
param_SD <- seq(10, 100,length.out = 10)
sd_mean.param <- sample (rep(param_SD, N_repet_Param), size = length(rep(param_SD, N_repet_Param)), replace=F)
sd_sd.param <- rep(5, nperm)
#Start simulation
#nperm= 10 donne 1000 p.value (5 traits * 10 sites * 2(test bilatéral))
nperm <- N_repet_Param*length(param_MEAN)
mean.sp_stock2 <- list()
sd.sp_stock2 <- list()
res.simu2 <- list()
res.simu2.pval <- list()
res.simu.traits2 <- list()
for(n in 1:nperm){
ex.sp2<-c()
ex.com2<-matrix(0, nrow=10, ncol=20)
for(i in 1: 10){
ex.com.interm <- table(sample(sp, size=100, prob=rlnorm(20, 0, sdlog), replace=T))
ex.com2[i, sp%in% names(ex.com.interm)] <- ex.com.interm
ex.sp2 <- c(ex.sp2, rep(sp, times=ex.com2[i,]))
}
ex.indplot2 <- as.factor(rep(com, 100))
#Defining mean and sd by species
mean.sp <- rnorm(nperm, mean = mean_mean.param[n], sd = mean_sd.param[n])
sd.sp <- rnorm(nperm, mean = sd_mean.param[n], sd = sd_sd.param[n])
ex.traits2<-array(NA, dim=c(1000,5))
colnames(ex.traits2) <- paste("traits", c("a", "b", "c", "d", "e"), sep=" ")
for(s in unique(ex.sp2)){
for(i in 1:3){
ex.traits2[ex.sp2==s,i] <- rnorm(500,  rep(mean.sp[unique(ex.sp2)==s], 500), rep(sd.sp[unique(ex.sp2)==s], 500))[1:sum(ex.sp2==s)]
}
for(i in 4:5){
ex.traits2[ex.sp2==s,i] <- runif(500, min = rep(mean.sp[unique(ex.sp2)==s], 500) - rep(sd.sp[unique(ex.sp2)==s], 500), max = rep(mean.sp[unique(ex.sp2)==s], 500) + rep(sd.sp[unique(ex.sp2)==s], 500) )[1:sum(ex.sp2==s)]
}
}
#stock results
mean.sp_stock2[[n]] <- mean.sp
sd.sp_stock2[[n]] <- sd.sp
res.simu.traits2[[n]] <- ex.traits2
res.simu2[[n]] <- Tstats(ex.traits2, ex.indplot2, ex.sp2, printprogress = FALSE)
res.simu2.pval[[n]]<-sum_Tstats(res.simu2[[n]], type="p.value")
print(n)
}#end of simulation
meanSES.2 <- lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
cor.test(meanSES.2, lapply(mean.sp_stock2, mean))
cor.test(meanSES.2, unlist(lapply(mean.sp_stock2, mean)))
meanSES.2
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean)))
cor.test(unlist(meanSES.2), unlist(lapply(sd.sp_stock2, mean)))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
plot(meanSES.2, lapply(mean.sp_stock2, mean))
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean)))
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
plot(meanSES.2, lapply(sd.sp_stock2, mean))
cor.test(unlist(meanSES.2), unlist(lapply(sd.sp_stock2, mean)))
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
cor.test(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
boxplot(unlist(meanSES.2) ~  sd_mean.param, horizontal = T)
boxplot(unlist(meanSES.2) ~  mean_mean.param, horizontal = T)
cor.test(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
plot(unlist(meanSES.2) ,  mean_mean.param/sd_mean.param)
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
plotDistri(ex.traits2,  ex.indplot2, ex.sp2)
plot(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
abline(v=mean(unlist(lapply(res.simu2, function(x) mean(ses.listofindex(as.listofindex(x))$index_1_1$ses.inf, na.rm=T))), na.rm=T))
abline(lm(unlist(meanSES.2) ~ unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean))))
unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean))
unlist(meanSES.2)
lm(unlist(meanSES.2) ~ unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))
abline(lm(unlist(meanSES.2) ~ unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean))))
abline(lm(unlist(meanSES.2), unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean))))
abline(unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))  ~  lm(unlist(meanSES.2))
abline(unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean)))  ~  lm(unlist(meanSES.2))
abline( lm(unlist(lapply(mean.sp_stock2, mean))/unlist(lapply(sd.sp_stock2, mean))  ~ unlist(meanSES.2))
)
