
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "cati"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "cati-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('cati')
Loading required package: nlme
Loading required package: ade4
Loading required package: ape
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CVNND")
> ### * CVNND
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CVNND
> ### Title: Coefficient of variation, mean, minimum and standard deviation
> ###   of the nearest neigbourhood distance.
> ### Aliases: CVNND MNND MinNND SDNND SDND
> 
> ### ** Examples
> 
> data(finch.ind)
> CVNND(traits.finch[,1])
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
[1] NaN
> CVNND(traits.finch[,1], div_range =  TRUE, na.rm = TRUE)
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
[1] NaN
> 
> CVNND(traits.finch)
[1] 0.6320784
> ## Not run: 
> ##D 	CVNND(traits.finch, scale.tr = FALSE)
> ## End(Not run)
> 
> SDND(traits.finch[,1])
[1] 0.1248847
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CVNND", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("ComIndex")
> ### * ComIndex
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ComIndex
> ### Title: Computing metrics to test and quantify the non-random assembly
> ###   of communities
> ### Aliases: ComIndex plot.ComIndex summary.ComIndex print.ComIndex
> 
> ### ** Examples
> 	
> data(finch.ind)
> oldpar <- par(no.readonly = TRUE)
> 
> ####
> #The function ComIndex allow to choose your own function 
> #(like mean, range, variance...) to calculate customize index.
> 
> require(e1071)
Loading required package: e1071
> 
> funct <- c("mean(x, na.rm = TRUE)", "kurtosis(x, na.rm = TRUE)", 
+ "max(x, na.rm = TRUE) - min(x, na.rm = TRUE)", "CVNND(x)"  )
> 
> ## Not run: 
> ##D 
> ##D res.finch.sp_mn2 <- ComIndex(traits = traits.finch, index = funct, 
> ##D sp = sp.finch, nullmodels = c("2","2","2","2"), 
> ##D ind.plot = ind.plot.finch,	nperm = 9, print = FALSE)
> ##D 
> ##D res.finch.sp_mn2sp <- ComIndex(traits = traits.finch, index = funct, 
> ##D sp = sp.finch, nullmodels = c("2sp","2sp","2sp","2sp"), 
> ##D ind.plot = ind.plot.finch, nperm = 9, print = FALSE)
> ##D 
> ##D ####
> ##D #We can represent Standardized Effect Size (ses)
> ##D #using the function plot(as.listofindex(list1, list2, list3))
> ##D 
> ##D list.ind2 <- list(res.finch.sp_mn2, res.finch.sp_mn2sp)
> ##D index.list2 <- as.listofindex(list.ind2)
> ##D 
> ##D plot(index.list2)
> ##D plot(index.list2, type = "bytraits")	
> ##D 
> ##D ####
> ##D #This allows to calcul index per site 
> ##D #for example using "tapply(x, sites, mean)".
> ##D 
> ##D funct <- c("tapply(x, ind.plot.finch, function(x) mean(x, na.rm = TRUE))", 
> ##D "tapply(x, ind.plot.finch, function(x) kurtosis(x, na.rm = TRUE))", 
> ##D "tapply(x, ind.plot.finch, function(x) max(x, na.rm = TRUE) - 
> ##D min(x, na.rm = TRUE) )", "tapply(x, ind.plot.finch, function(x) 
> ##D CVNND(x))"  )
> ##D 
> ##D 
> ##D ##Null model 1 is trivial for this function 
> ##D #because randomisation is within community only
> ##D 
> ##D res.finch.ind_mn1 <- ComIndex(traits = traits.finch, index = funct, 
> ##D sp = sp.finch, nullmodels = c(1,1,1,1), ind.plot = ind.plot.finch, 
> ##D nperm = 9, print = FALSE)
> ##D 
> ##D res.finch.ind_mn2 <- ComIndex(traits = traits.finch, index = funct, 
> ##D sp = sp.finch, nullmodels = c("2","2","2","2"), ind.plot = ind.plot.finch, 
> ##D nperm = 9, print = FALSE)
> ##D 
> ##D 	
> ##D ####
> ##D #We can calcul metrics with or without intraspecific variance.
> ##D #Calculation of trait averages per population 
> ##D #(name_sp_site is a name of a population) 
> ##D #like in the function ComIndex
> ##D #and determine the site for each population (sites_bypop)
> ##D 
> ##D name_sp_sites = paste(sp.finch, ind.plot.finch, sep = "_")
> ##D traits.by.pop <- apply(traits.finch, 2 , function (x) 
> ##D tapply(x, name_sp_sites, mean , na.rm = TRUE))
> ##D 
> ##D sites_bypop <- lapply(strsplit(paste(rownames(traits.by.pop), sep = "_"), 
> ##D split = "_"), function(x) x[3])
> ##D 
> ##D funct.withoutIV <- c("tapply(x, unlist(sites_bypop), function(x) 
> ##D mean(x, na.rm = TRUE))", "tapply(x, unlist(sites_bypop), function(x) 
> ##D kurtosis(x, na.rm = TRUE))", "tapply(x, unlist(sites_bypop), function(x) 
> ##D max(x, na.rm = TRUE) - min(x, na.rm = TRUE) )", 
> ##D "tapply(x, unlist(sites_bypop), function(x) CVNND(x))"  )
> ##D 
> ##D funct.withIV <- c("tapply(x, ind.plot.finch, function(x) 
> ##D mean(x, na.rm = TRUE))", "tapply(x, ind.plot.finch, function(x) 
> ##D kurtosis(x, na.rm = TRUE))", "tapply(x, ind.plot.finch, function(x) 
> ##D max(x, na.rm = TRUE) - min(x, na.rm = TRUE) )", 
> ##D "tapply(x, ind.plot.finch, function(x) CVNND(x))"  )
> ##D 	
> ##D res.finch.withIV <- ComIndex(traits = traits.finch, index = funct.withIV, 
> ##D sp = sp.finch, nullmodels = c("2","2","2","2"), ind.plot = ind.plot.finch, 
> ##D nperm = 9, print = FALSE)
> ##D 
> ##D res.finch.withoutIV <- ComIndex(traits = traits.finch, index = funct.withoutIV, 
> ##D sp = sp.finch, nullmodels = c("2sp","2sp","2sp","2sp"), 
> ##D ind.plot = ind.plot.finch, nperm = 9, print = FALSE)
> ##D 
> ##D 	
> ##D ####
> ##D #We can also represent T-statistics and custom index thanks to
> ##D #the plot.listofindex function.
> ##D 
> ##D res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch, sp = sp.finch, 
> ##D nperm = 9, print = FALSE)
> ##D 
> ##D list.ind <- list(res.finch.withIV, res.finch.withoutIV ,res.finch)
> ##D 
> ##D index.list1 <- as.listofindex(list.ind, namesindex = c("mean", "kurtosis", 
> ##D "range", "CVNND", "mean.pop", "kurtosis.pop", "range.pop", "CVNND.pop", 
> ##D "T_IP.IC", "T_IC.IR", "T_PC.PR"))
> ##D 
> ##D class(index.list1)
> ##D 
> ##D par(mfrow = c(2,3))
> ##D plot(index.list1,type = "bytraits", bysite = TRUE)
> ##D 
> ##D par(mfrow = c(2,2))
> ##D plot(index.list1,type = "bytraits")
> ##D par(mfrow = c(1,1))
> ##D 
> ##D plot(index.list1,type = "simple")
> ##D plot(index.list1,type = "simple_range")
> ##D plot(index.list1,type = "normal")
> ##D plot(index.list1,type = "barplot")
> ## End(Not run)
> 
> 
> ############################
> ####Using ind.value = FALSE and community data matrix if there is no data 
> #available at the individual level.
> 
> ## Not run: 
> ##D 
> ##D #create traits data at the species level
> ##D traits_by_sp <- apply(traits.finch,2,function(x) tapply(x,sp.finch,
> ##D function(x) mean(x, na.rm = T)))  
> ##D 
> ##D #create traits data at the populational level
> ##D names_sp_ind.plot <- as.factor(paste(sp.finch, ind.plot.finch, sep = "@")) 
> ##D traits_by_pop <- apply(traits.finch,2,function(x) tapply(x,names_sp_ind.plot, 
> ##D function(x) mean(x, na.rm = T) ))  
> ##D 
> ##D #create community data matrix at the species or populational level
> ##D w1 <- table(sp.finch,ind.plot.finch)
> ##D dim(w1)
> ##D dim(traits_by_sp)
> ##D 
> ##D w2 <- table(names_sp_ind.plot,ind.plot.finch)
> ##D dim(w2)
> ##D dim(traits_by_pop)
> ##D 
> ##D #Choose indices
> ##D require(e1071)
> ##D 
> ##D funct <- c("mean(x, na.rm = TRUE)", "kurtosis(x, na.rm = TRUE)", 
> ##D "max(x, na.rm = TRUE) - min(x, na.rm = TRUE)", "CVNND(x)"  )
> ##D 
> ##D 
> ##D #################
> ##D #with species value
> ##D 
> ##D res <- AbToInd(traits_by_sp, w1)
> ##D 
> ##D ComIndex(traits_by_sp, nullmodels = 2, ind.value = FALSE, index = funct, 
> ##D sp = rownames(traits_by_sp), com = w1, nperm = 9)
> ##D 
> ##D 
> ##D #################
> ##D #with population value
> ##D res <- AbToInd(traits_by_pop, w2)
> ##D sp.sp <- unlist(strsplit(rownames(traits_by_pop),"@"))[seq(1,39*2,2)]
> ##D 
> ##D ComIndex(traits_by_pop, nullmodels = 2, ind.value = FALSE, index = funct, 
> ##D sp = sp.sp, com = w2)
> ##D 	
> ## End(Not run)
> 
> ############################
> ####Simple example using null model 2sp.prab (species level without taking 
> # into acount for species abundance, prab for presence/absence)
> 
> ## Not run: 
> ##D 
> ##D traits_by_sp <- apply(traits.finch, 2, function(x) 
> ##D tapply(x, name_sp_sites, mean, na.rm=T))
> ##D 
> ##D sites_bysp<-unlist(strsplit(rownames(traits_by_sp), 
> ##D split="_"))[seq(3,3*dim(traits_by_sp)[1], by=3) ]
> ##D 
> ##D funct.withoutIV.prab <- c("tapply(x, unlist(sites_bysp), 
> ##D 	function(x) mean(x, na.rm = TRUE))", 
> ##D 	"tapply(x, unlist(sites_bysp), function(x) kurtosis(x, na.rm = TRUE))", 
> ##D 	"tapply(x, unlist(sites_bysp), function(x) max(x, na.rm = TRUE) 
> ##D 	- min(x, na.rm = TRUE) )", 
> ##D 	"tapply(x, unlist(sites_bysp), function(x) CVNND(x))")
> ##D 	
> ##D res.finch.withoutIV.prab <- ComIndex(traits = traits.finch, 
> ##D 	index = funct.withoutIV.prab, sp = sp.finch, 
> ##D 	nullmodels = rep("2sp.prab", times=4), ind.plot = ind.plot.finch, 
> ##D 
> ##D traits_by_sp <- apply(traits.finch, 2, function(x) tapply(x, 
> ##D name_sp_sites, mean, na.rm=T))
> ##D sites_bysp<-unlist(strsplit(rownames(traits_by_sp), split="_"))
> ##D [seq(3,3*dim(traits_by_sp)[1], by=3) ]
> ##D 
> ##D funct.withoutIV.prab <- c("tapply(x, unlist(sites_bysp), 
> ##D 	function(x) mean(x, na.rm = TRUE))", 
> ##D 	"tapply(x, unlist(sites_bysp), 
> ##D 	function(x) kurtosis(x, na.rm = TRUE))", 
> ##D 	"tapply(x, unlist(sites_bysp), 
> ##D 	function(x) max(x, na.rm = TRUE) - min(x, na.rm = TRUE) )", 
> ##D 	"tapply(x, unlist(sites_bysp), 
> ##D 	function(x) CVNND(x))")
> ##D 	
> ##D res.finch.withoutIV.prab <- ComIndex(traits = traits.finch, 
> ##D 	index = funct.withoutIV.prab, sp = sp.finch, 
> ##D 	nullmodels = rep("2sp.prab", times=4), ind.plot = ind.plot.finch,
> ##D 	nperm = 9, print = FALSE)
> ##D 
> ##D list.ind2 <- list(res.finch.withoutIV, res.finch.withoutIV.prab)
> ##D index.list2 <- as.listofindex(list.ind2, namesindex = 
> ##D 	c("mean.pop", "kurtosis.pop", "range.pop", "CVNND.pop", 
> ##D 	"mean.prab", "kurtosis.prab", "range.prab", "CVNND.prab"))
> ##D 
> ##D plot(index.list2)
> ## End(Not run)
> 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ComIndex", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()

detaching 'package:e1071'

> nameEx("ComIndexMulti")
> ### * ComIndexMulti
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ComIndexMulti
> ### Title: Computing multitraits metrics to test and quantify the
> ###   non-random assembly of communities
> ### Aliases: ComIndexMulti plot.ComIndexMulti summary.ComIndexMulti
> ###   print.ComIndexMulti
> 
> ### ** Examples
> 
> data(finch.ind)
> 
> ####
> #For most multivariate functions we need to replace (or exclude)
> #NA values.
> 
> #For this example, we use the package mice to complete the data.
> 
> ## Not run: 
> ##D names.sp_ind.plot <- as.factor(paste(sp.finch, ind.plot.finch, sep = "_")) 
> ##D 
> ##D comm <- t(table(ind.plot.finch,1:length(ind.plot.finch)))
> ##D 
> ##D library(mice)
> ##D traits = traits.finch
> ##D mice <- mice(traits.finch)
> ##D traits.finch.mice <- complete(mice)
> ##D 
> ##D ####
> ##D #A simple example to illustrate the concept of the function 
> ##D #ComIndexMulti
> ##D 
> ##D res.sum.1 <- ComIndexMulti(traits.finch, 
> ##D index = c("sum(scale(x), na.rm = TRUE)", "sum(x, na.rm = TRUE)"), 
> ##D by.factor = names.sp_ind.plot, nullmodels = c(2,2), 
> ##D ind.plot = ind.plot.finch, nperm = 50, sp = sp.finch)
> ##D 
> ##D attributes(ses.listofindex(as.listofindex(res.sum.1)))
> ##D 
> ##D ####
> ##D #A more interesting example using the function hypervolume 
> ##D #from the package hypervolume. 
> ##D #We show here several results which differe in there factor 
> ##D #that delimit the group to calculate different hypervolume 
> ##D #(argument by_factor). 
> ##D 
> ##D require(hypervolume)
> ##D 
> ##D res.hv.1 <- ComIndexMulti(traits.finch.mice, index = 
> ##D paste("as.numeric (try(hypervolume(na.omit(x), warnings = FALSE,", 
> ##D "bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D by.factor = rep(1,length(names.sp_ind.plot)), nullmodels = c(2,2), 
> ##D ind.plot = ind.plot.finch, nperm = 9, sp = sp.finch)
> ##D 
> ##D res.hv.2 <- ComIndexMulti(traits.finch.mice, index = 
> ##D paste("as.numeric(try(hypervolume(na.omit(x), warnings = FALSE,",
> ##D "bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D by.factor = names.sp_ind.plot, nullmodels = c(2,2), 
> ##D ind.plot = ind.plot.finch, nperm = 9, sp = sp.finch)
> ##D 
> ##D res.hv.3 <- ComIndexMulti(traits.finch.mice, index = 
> ##D paste("as.numeric(try(hypervolume(na.omit(x), warnings = FALSE,"
> ##D "bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D c("as.numeric (try(hypervolume(na.omit(x), 
> ##D warnings = FALSE, bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D by.factor = rep(1,length(names.sp_ind.plot)), nullmodels = c(2,2), 
> ##D ind.plot = ind.plot.finch, nperm = 9, sp = sp.finch)
> ##D 
> ##D res.hv.4 <- ComIndexMulti(traits.finch.mice, index = 
> ##D paste("as.numeric(try(hypervolume(na.omit(x), warnings = FALSE,",
> ##D "bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D c("as.numeric(try(hypervolume(na.omit(x), 
> ##D warnings = FALSE, bandwidth=0.2, verbose=FALSE)@Volume))"), 
> ##D by.factor = sp.finch, nullmodels = c(2,2), ind.plot = ind.plot.finch, 
> ##D nperm = 9, sp = sp.finch)
> ##D 
> ##D 
> ##D list.ind.multi <- as.listofindex(list(res.hv.2, res.hv.3, res.hv.4))
> ##D 
> ##D ses.listofindex(list.ind.multi)
> ##D 
> ##D plot(list.ind.multi)
> ##D plot(list.ind.multi, xlim = c(-200,20))
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("ComIndexMulti", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("MinMaxMST")
> ### * MinMaxMST
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: MinMaxMST
> ### Title: Ratio of the shortest distance to the longest distance in a
> ###   minimum spanning tree
> ### Aliases: MinMaxMST
> 
> ### ** Examples
> 
> 
> data(finch.ind)
> 
> MinMaxMST(traits.finch[1:10,])
Loading required package: FD
Loading required package: geometry
Loading required package: magic
Loading required package: abind
Loading required package: vegan
Loading required package: permute
Loading required package: lattice
This is vegan 2.0-10

Attaching package: 'vegan'

The following object is masked from 'package:ade4':

    cca

[1] 0.1059942
> MinMaxMST(traits.finch[1:10,], gower.dist = FALSE)
[1] 0.1346956
> MinMaxMST(traits.finch[1:10,], gower.dist = FALSE, scale.tr = FALSE)
[1] 0.1259882
> 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("MinMaxMST", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:FD', 'package:vegan', 'package:lattice',
  'package:permute', 'package:geometry', 'package:magic',
  'package:abind'

> nameEx("RaoRel")
> ### * RaoRel
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RaoRel
> ### Title: Alpha, gamma and beta-components for taxonomic, functional and
> ###   phylogenetic diversity
> ### Aliases: RaoRel
> 
> ### ** Examples
> 
> 	data(finch.ind)
> 	
> 	## Not run: 
> ##D 		comm <- t(table(ind.plot.finch,1:length(ind.plot.finch)))
> ##D 		comm.sp <- table(sp.finch, ind.plot.finch)
> ##D 		class(comm.sp) <- "matrix"
> ##D 		
> ##D 		traits.finch.sp <- apply( apply(traits.finch, 2, scale ), 2, 
> ##D 
> ##D 		function(x) tapply(x, sp.finch, mean, na.rm = TRUE))
> ##D 		
> ##D 		mat.dist <- as.matrix(dist(traits.finch.sp))^2
> ##D 		
> ##D 		res.rao <- RaoRel(sample = as.matrix(comm.sp), dfunc = mat.dist, dphyl = NULL, 
> ##D 		weight = FALSE, Jost = FALSE, structure = NULL)
> ##D 
> ##D 		function(x) tapply(x, sp.finch, mean, na.rm=TRUE))
> ##D 		
> ##D 		mat.dist <- as.matrix(dist(traits.finch.sp))^2
> ##D 		
> ##D 		res.rao <- RaoRel(sample=as.matrix(comm.sp), dfunc=mat.dist, dphyl=NULL, 
> ##D 		weight=FALSE, Jost=FALSE, structure=NULL)
> ##D 
> ##D 		
> ##D 		witRao <- res.rao$FD$Mean_Alpha  #overall within species variance
> ##D 		betRao <- res.rao$FD$Beta_add    #between species variance
> ##D 		totRao <- res.rao$FD$Gamma       #the total variance
> ##D 		
> ##D 		witRao+betRao
> ##D 		totRao
> ##D 		
> ##D 		
> ##D 		#Now let"s take the abundance to calculate Rao diversity.
> ##D 		
> ##D 
> ##D 		res.rao.w <- RaoRel(sample = as.matrix(comm.sp), dfunc = mat.dist, dphyl = NULL, 
> ##D 		weight = TRUE, Jost = FALSE, structure = NULL)
> ##D 
> ##D 		res.rao.w <- RaoRel(sample=as.matrix(comm.sp), dfunc=mat.dist, dphyl=NULL, 
> ##D 		weight=TRUE, Jost=FALSE, structure=NULL)
> ##D 
> ##D 		
> ##D 		witRao.w <- res.rao.w$FD$Mean_Alpha  #overall within species variance
> ##D 		betRao.w <- res.rao.w$FD$Beta_add    #between species variance
> ##D 		totRao.w <- res.rao.w$FD$Gamma       #the total variance
> ##D 		
> ##D 		witRao.w
> ##D 		betRao.w
> ##D 		
> ##D 		
> ##D 		#Plot the results
> ##D 		
> ##D 		barplot(cbind(c(witRao.w, betRao.w), c(witRao, betRao)), 
> ##D 		names.arg  = c("abundance" ,"presence"), 
> ##D 		legend.text = c("within species", "between species"), 
> ##D 		ylab = "Rao", ylim = c(0,10))
> ##D 		
> ##D 		
> ##D 		#We can do this analysis for each trait separately. 
> ##D 		#First we need to replace (or exclude) NA values. 
> ##D 		#For this example, we use the package mice to complete the data.
> ##D 		
> ##D 		comm <- t(table(ind.plot.finch,1:length(ind.plot.finch)))
> ##D 		
> ##D 		library(mice)
> ##D 
> ##D 		traits = traits.finch
> ##D 
> ##D 		traits=traits.finch
> ##D 
> ##D 		mice <- mice(traits.finch)
> ##D 		traits.finch.mice <- complete(mice)
> ##D 		
> ##D 		
> ##D 		traits.finch.mice.sp <- apply(apply(traits.finch.mice, 2, scale ), 2, 
> ##D 
> ##D 		function(x) tapply(x, sp.finch, mean, na.rm = TRUE))
> ##D 
> ##D 
> ##D 		function(x) tapply(x, sp.finch, mean, na.rm = TRUE))
> ##D 
> ##D 		function(x) tapply(x, sp.finch, mean, na.rm=TRUE))
> ##D 
> ##D 
> ##D 		
> ##D 		trait.rao.w <- list()
> ##D 		witRao.w.bytrait <- c()
> ##D 		betRao.w.bytrait <- c()
> ##D 
> ##D 		for (t in 1 : 4){
> ##D 		  trait.rao.w[[t]] <- RaoRel(sample = as.matrix(comm.sp), 
> ##D 		  dfunc = dist(traits.finch.mice.sp[,t]), dphyl = NULL, weight = TRUE, 
> ##D 		  Jost = FALSE, structure = NULL)
> ##D 		}
> ##D 		
> ##D 		for(t in 1 : 4){
> ##D 		  trait.rao.w[[t]] <- RaoRel(sample=as.matrix(comm.sp), 
> ##D 		  dfunc=dist(traits.finch.mice.sp[,t]), dphyl=NULL, weight=TRUE, 
> ##D 		  Jost=FALSE, structure=NULL)
> ##D 
> ##D 		  
> ##D 		  witRao.w.bytrait <- c(witRao.w.bytrait, trait.rao.w[[t]]$FD$Mean_Alpha)
> ##D 		  betRao.w.bytrait <- c(betRao.w.bytrait, trait.rao.w[[t]]$FD$Beta_add)
> ##D 		}
> ##D 		
> ##D 		#Plot the results by traits.
> ##D 		
> ##D 		barplot(t(cbind( witRao.w.bytrait, betRao.w.bytrait)), 
> ##D 		names.arg = colnames(traits.finch),
> ##D 		legend.text = c("within species", "between species"), 
> ##D 		ylab = "Rao", ylim = c(0,1.5))	
> ##D 	
> ## End(Not run)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("RaoRel", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("SumBL")
> ### * SumBL
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: SumBL
> ### Title: Sum of branch length of a classification dendrogram (Petchey and
> ###   Gaston, 2002)
> ### Aliases: SumBL
> 
> ### ** Examples
> 
> 
> data(finch.ind)
> SumBL(traits.finch)
Loading required package: vegan
Loading required package: permute
Loading required package: lattice
This is vegan 2.0-10

Attaching package: 'vegan'

The following object is masked from 'package:ade4':

    cca

Loading required package: FD
Loading required package: geometry
Loading required package: magic
Loading required package: abind
[1] 29.01669
> SumBL(traits.finch, gower.dist = FALSE)
[1] 345.3096
> 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("SumBL", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:FD', 'package:geometry', 'package:magic',
  'package:abind', 'package:vegan', 'package:lattice',
  'package:permute'

> nameEx("Tstats")
> ### * Tstats
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: Tstats
> ### Title: Computing observed T-statistics (T for Traits) and null
> ###   expectations.
> ### Aliases: Tstats barplot.Tstats plot.Tstats summary.Tstats print.Tstats
> ###   sum_Tstats
> 
> ### ** Examples
> 
> 	data(finch.ind)
> 
> 	res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch, 
+ 	sp = sp.finch, nperm = 9, print = FALSE)
> 	
> 	attributes(res.finch)
$names
[1] "Tstats"    "variances"

$class
[1] "Tstats"

> 
> 	#Tstats class is associated to S3 methods plot, barplot and summary
> 	
> 	plot(res.finch)
> 	
> 	plot(res.finch, type = "color_cond")
> 	plot(res.finch, type = "simple")
> 	plot(res.finch, type = "simple_sd")
> 	plot(res.finch, type = "barplot")
> 	
> 	attributes(sum_Tstats(res.finch))
$names
[1] "p.value" "percent" "sites"   "binary" 

> 	head(sum_Tstats(res.finch)$p.value, 10)
            WingL BeakH UBeakL N.UBkL
T_IP.IC.inf   0.1   0.2    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.sup   1.0   0.9    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
> 	
> 	sum_Tstats(res.finch, type = "binary")
            WingL BeakH UBeakL N.UBkL
T_IP.IC.inf  TRUE  TRUE   TRUE   TRUE
T_IP.IC.sup FALSE FALSE  FALSE  FALSE
T_IC.IR.inf FALSE FALSE   TRUE  FALSE
T_IC.IR.sup FALSE FALSE  FALSE  FALSE
T_PC.PR.inf FALSE FALSE  FALSE  FALSE
T_PC.PR.sup FALSE FALSE  FALSE  FALSE
> 	sum_Tstats(res.finch, type = "percent")
            WingL   BeakH  UBeakL  N.UBkL 
T_IP.IC.inf "100%*" "83%*" "100%*" "100%*"
T_IP.IC.sup "0%"    "0%"   "0%"    "0%"   
T_IC.IR.inf "33%"   "50%"  "50%*"  "33%"  
T_IC.IR.sup "50%"   "50%"  "17%"   "33%"  
T_PC.PR.inf "17%"   "17%"  "0%"    "0%"   
T_PC.PR.sup "17%"   "17%"  "17%"   "33%"  
> 	sum_Tstats(res.finch, type = "site")
            WingL                                          
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr MrchBndl"                       
T_PC.PR.inf "DMaj"                                         
T_PC.PR.sup "EspHd"                                        
            BeakH                                     
T_IP.IC.inf "EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                         
T_IC.IR.inf "EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr MrchBndl"                  
T_PC.PR.inf "DMaj"                                    
T_PC.PR.sup "GnovTwr"                                 
            UBeakL                                         
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "GnovTwr"                                      
T_PC.PR.inf "H0 not rejected"                              
T_PC.PR.sup "MrchBndl"                                     
            N.UBkL                                         
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr"                                
T_PC.PR.inf "H0 not rejected"                              
T_PC.PR.sup "EspHd SCruInde"                               
> 	sum_Tstats(res.finch, type = "p.value")
                     WingL BeakH UBeakL N.UBkL
T_IP.IC.inf DMaj       0.1   0.2    0.1    0.1
T_IP.IC.inf EspHd      0.1   0.1    0.1    0.1
T_IP.IC.inf FlorChrl   0.1   0.1    0.1    0.1
T_IP.IC.inf GnovTwr    0.1   0.1    0.1    0.1
T_IP.IC.inf MrchBndl   0.1   0.1    0.1    0.1
T_IP.IC.inf SCruInde   0.1   0.1    0.1    0.1
T_IP.IC.sup DMaj       1.0   0.9    1.0    1.0
T_IP.IC.sup EspHd      1.0   1.0    1.0    1.0
T_IP.IC.sup FlorChrl   1.0   1.0    1.0    1.0
T_IP.IC.sup GnovTwr    1.0   1.0    1.0    1.0
T_IP.IC.sup MrchBndl   1.0   1.0    1.0    1.0
T_IP.IC.sup SCruInde   1.0   1.0    1.0    1.0
T_IC.IR.inf DMaj       0.1   0.1    0.1    0.1
T_IC.IR.inf EspHd      1.0   1.0    0.8    1.0
T_IC.IR.inf FlorChrl   0.1   0.1    0.1    0.1
T_IC.IR.inf GnovTwr    1.0   1.0    1.0    1.0
T_IC.IR.inf MrchBndl   1.0   1.0    0.1    0.2
T_IC.IR.inf SCruInde   0.2   0.1    0.2    0.3
T_IC.IR.sup DMaj       1.0   1.0    1.0    1.0
T_IC.IR.sup EspHd      0.1   0.1    0.3    0.1
T_IC.IR.sup FlorChrl   1.0   1.0    1.0    1.0
T_IC.IR.sup GnovTwr    0.1   0.1    0.1    0.1
T_IC.IR.sup MrchBndl   0.1   0.1    1.0    0.9
T_IC.IR.sup SCruInde   0.9   1.0    0.9    0.8
T_PC.PR.inf DMaj       0.1   0.1    0.4    0.3
T_PC.PR.inf EspHd      1.0   0.7    0.8    1.0
T_PC.PR.inf FlorChrl   0.6   0.8    0.8    0.7
T_PC.PR.inf GnovTwr    0.9   1.0    0.8    0.9
T_PC.PR.inf MrchBndl   0.9   0.6    1.0    0.6
T_PC.PR.inf SCruInde   0.8   0.6    0.7    1.0
T_PC.PR.sup DMaj       0.9   0.9    0.6    0.8
T_PC.PR.sup EspHd      0.1   0.4    0.3    0.1
T_PC.PR.sup FlorChrl   0.5   0.3    0.3    0.4
T_PC.PR.sup GnovTwr    0.2   0.1    0.3    0.2
T_PC.PR.sup MrchBndl   0.2   0.5    0.1    0.5
T_PC.PR.sup SCruInde   0.3   0.5    0.4    0.1
> 	sum_Tstats(res.finch, type = "all")
$p.value
            WingL BeakH UBeakL N.UBkL
T_IP.IC.inf   0.1   0.2    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.sup   1.0   0.9    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IC.IR.inf   0.1   0.1    0.1    0.1
T_IC.IR.inf   1.0   1.0    0.8    1.0
T_IC.IR.inf   0.1   0.1    0.1    0.1
T_IC.IR.inf   1.0   1.0    1.0    1.0
T_IC.IR.inf   1.0   1.0    0.1    0.2
T_IC.IR.inf   0.2   0.1    0.2    0.3
T_IC.IR.sup   1.0   1.0    1.0    1.0
T_IC.IR.sup   0.1   0.1    0.3    0.1
T_IC.IR.sup   1.0   1.0    1.0    1.0
T_IC.IR.sup   0.1   0.1    0.1    0.1
T_IC.IR.sup   0.1   0.1    1.0    0.9
T_IC.IR.sup   0.9   1.0    0.9    0.8
T_PC.PR.inf   0.1   0.1    0.4    0.3
T_PC.PR.inf   1.0   0.7    0.8    1.0
T_PC.PR.inf   0.6   0.8    0.8    0.7
T_PC.PR.inf   0.9   1.0    0.8    0.9
T_PC.PR.inf   0.9   0.6    1.0    0.6
T_PC.PR.inf   0.8   0.6    0.7    1.0
T_PC.PR.sup   0.9   0.9    0.6    0.8
T_PC.PR.sup   0.1   0.4    0.3    0.1
T_PC.PR.sup   0.5   0.3    0.3    0.4
T_PC.PR.sup   0.2   0.1    0.3    0.2
T_PC.PR.sup   0.2   0.5    0.1    0.5
T_PC.PR.sup   0.3   0.5    0.4    0.1

$percent
            WingL   BeakH  UBeakL  N.UBkL 
T_IP.IC.inf "100%*" "83%*" "100%*" "100%*"
T_IP.IC.sup "0%"    "0%"   "0%"    "0%"   
T_IC.IR.inf "33%"   "50%"  "50%*"  "33%"  
T_IC.IR.sup "50%"   "50%"  "17%"   "33%"  
T_PC.PR.inf "17%"   "17%"  "0%"    "0%"   
T_PC.PR.sup "17%"   "17%"  "17%"   "33%"  

$sites
            WingL                                          
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr MrchBndl"                       
T_PC.PR.inf "DMaj"                                         
T_PC.PR.sup "EspHd"                                        
            BeakH                                     
T_IP.IC.inf "EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                         
T_IC.IR.inf "EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr MrchBndl"                  
T_PC.PR.inf "DMaj"                                    
T_PC.PR.sup "GnovTwr"                                 
            UBeakL                                         
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "GnovTwr"                                      
T_PC.PR.inf "H0 not rejected"                              
T_PC.PR.sup "MrchBndl"                                     
            N.UBkL                                         
T_IP.IC.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IP.IC.sup "H0 not rejected"                              
T_IC.IR.inf "DMaj EspHd FlorChrl GnovTwr MrchBndl SCruInde"
T_IC.IR.sup "EspHd GnovTwr"                                
T_PC.PR.inf "H0 not rejected"                              
T_PC.PR.sup "EspHd SCruInde"                               

$binary
            WingL BeakH UBeakL N.UBkL
T_IP.IC.inf  TRUE  TRUE   TRUE   TRUE
T_IP.IC.sup FALSE FALSE  FALSE  FALSE
T_IC.IR.inf FALSE FALSE   TRUE  FALSE
T_IC.IR.sup FALSE FALSE  FALSE  FALSE
T_PC.PR.inf FALSE FALSE  FALSE  FALSE
T_PC.PR.sup FALSE FALSE  FALSE  FALSE

> 	
> 	barplot(res.finch)
> 	
> 	attributes(sum_Tstats(res.finch))
$names
[1] "p.value" "percent" "sites"   "binary" 

> 	head(sum_Tstats(res.finch)$p.value, 10)
            WingL BeakH UBeakL N.UBkL
T_IP.IC.inf   0.1   0.2    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.inf   0.1   0.1    0.1    0.1
T_IP.IC.sup   1.0   0.9    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
T_IP.IC.sup   1.0   1.0    1.0    1.0
> 	
> 	#### An other way to see "ses values" of T-statistics
> 	
> 	# Custom theme (from rasterVis package)
> 	require(rasterVis)
Loading required package: rasterVis
Loading required package: raster
Loading required package: sp

Attaching package: 'raster'

The following objects are masked from 'package:ape':

    edges, rotate, zoom

The following object is masked from 'package:nlme':

    getData

Loading required package: lattice
Loading required package: latticeExtra
Loading required package: RColorBrewer
Loading required package: hexbin
Loading required package: grid
> 	
> 	my.theme <- BuRdTheme()
> 	# Customize the colorkey
> 	my.ckey <- list(col = my.theme$regions$col)
> 	
> 	levelplot(t(ses(res.finch$Tstats$T_IP.IC,res.finch$Tstats$T_IP.IC_nm)$ses), 
+ 	colorkey = my.ckey, par.settings = my.theme,border = "black")
> 	
> 	
> 	#### Use a different regional pool than the binding of studied communities
> 	
> 	#create a random regional pool for the example
> 
> 	reg.p <- rbind(traits.finch, traits.finch[sample(1:2000,300), ])
> 
> 	res.finch2 <- Tstats(traits.finch, ind.plot = ind.plot.finch, 
+     sp = sp.finch, nperm = 9, print = FALSE)	
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("Tstats", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching 'package:rasterVis', 'package:hexbin', 'package:grid',
  'package:latticeExtra', 'package:RColorBrewer', 'package:lattice',
  'package:raster', 'package:sp'

> nameEx("as.listofindex")
> ### * as.listofindex
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: as.listofindex
> ### Title: Transform index results in a list of index
> ### Aliases: as.listofindex
> 
> ### ** Examples
> 
> data(finch.ind)
> oldpar <- par(no.readonly = TRUE)
> 
> ####
> #The function ComIndex allow to choose your own function 
> #(like mean, range, variance...) to calculate customize index.
> 
> require(e1071)
Loading required package: e1071
> 
> 
> funct <- c("mean(x, na.rm = TRUE)", "kurtosis(x, na.rm = TRUE)",
+ "max(x, na.rm = TRUE) - min(x, na.rm = TRUE)", "CVNND(x)" )
> 
> 
> res.finch.sp_mn2 <- ComIndex(traits = traits.finch, index = funct, 
+ sp = sp.finch, nullmodels = c(2,2,2,2), ind.plot = ind.plot.finch, 
+ nperm = 9, print = FALSE)
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
Warning in min(x, na.rm = T) :
  no non-missing arguments to min; returning Inf
